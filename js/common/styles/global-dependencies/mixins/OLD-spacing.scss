/* ==========================================================================
    SPACING
   ========================================================================== */
   // TODO: OLD Style, Kill them eventually please.
   // scss-lint:disable all

@mixin padding ($max, $direction: '', $min: $max) {

 //Sets padding on the sides
 @if $direction == 'x' {
   padding-left: avg($min, $max);
   padding-right: avg($min, $max);
   padding-left: responsiveCalc($min, $max);
   padding-right: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     padding-left: #{max($max)}px;
     padding-right: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     padding-left: #{min($min)}px;
     padding-right: #{min($min)}px;
   }

   //Sets Padding on the top and bottom
 } @else if $direction == 'y' {
   padding-top: avg($min, $max);
   padding-bottom: avg($min, $max);
   padding-top: responsiveCalc($min, $max);
   padding-bottom: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     padding-top: #{max($max)}px;
     padding-bottom: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     padding-top: #{min($min)}px;
     padding-bottom: #{min($min)}px;
   }

   //Allows mixin direction value to be blank and default to all sides.
 } @else if $direction == '' {
   $direction-prefixed: '';

   padding#{$direction-prefixed}: avg($min, $max);
   padding#{$direction-prefixed}: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     padding#{$direction-prefixed}: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     padding#{$direction-prefixed}: #{min($min)}px;
   }

   //Sets the padding direction
 } @else {
   @if $direction == 't'{
     $direction: 'top';
   }
   @if $direction == 'b'{
     $direction: 'bottom';
   }
   @if $direction == 'r'{
     $direction: 'right';
   }
   @if $direction == 'l'{
     $direction: 'left';
   }
   $direction-prefixed: '-#{$direction}';
   padding#{$direction-prefixed}: avg($min, $max);
   padding#{$direction-prefixed}: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     padding#{$direction-prefixed}: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     padding#{$direction-prefixed}: #{min($min)}px;
   }
 }
}


@mixin margin ($max, $direction: '', $min: $max) {

 //Sets margin on the sides
 @if $direction == 'x' {
   margin-left: avg($min, $max);
   margin-right: avg($min, $max);
   margin-left: responsiveCalc($min, $max);
   margin-right: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     margin-left: #{max($max)}px;
     margin-right: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     margin-left: #{min($min)}px;
     margin-right: #{min($min)}px;
   }

   //Sets margin on the top and bottom
 } @else if $direction == 'y' {
   margin-top: avg($min, $max);
   margin-bottom: avg($min, $max);
   margin-top: responsiveCalc($min, $max);
   margin-bottom: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     margin-top: #{max($max)}px;
     margin-bottom: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     margin-top: #{min($min)}px;
     margin-bottom: #{min($min)}px;
   }

   //Allows mixin direction value to be blank and default to all sides.
 } @else if $direction == '' {
   $direction-prefixed: '';

   margin#{$direction-prefixed}: avg($min, $max);
   margin#{$direction-prefixed}: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     margin#{$direction-prefixed}: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     margin#{$direction-prefixed}: #{min($min)}px;
   }

   //Sets the margin direction
 } @else {
    @if $direction == 't'{
      $direction: 'top';
    }
    @if $direction == 'b'{
      $direction: 'bottom';
    }
    @if $direction == 'r'{
      $direction: 'right';
    }
    @if $direction == 'l'{
      $direction: 'left';
    }
   $direction-prefixed: '-#{$direction}';
   margin#{$direction-prefixed}: avg($min, $max);
   margin#{$direction-prefixed}: responsiveCalc($min, $max);

   //Sets Media queries to set the min and max values
   @media (min-width: #{$screen-large}px) {
     margin#{$direction-prefixed}: #{max($max)}px;
   }
   @media (max-width: #{$screen-small}px) {
     margin#{$direction-prefixed}: #{min($min)}px;
   }
 }
}
