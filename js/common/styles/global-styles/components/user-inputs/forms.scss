.c-form-error-text {
  flex-basis: 100%;
  margin: 0 16px;
  color: $cl-error;
}

.c-form-help-text {
  position: relative;
  @include flex-container(left, top, top);
  @include flex-item(160px, 1, 280px);
  align-self: center;
  margin: 8px;
  padding: 0 8px;

  p {
    @include flex-item(120px, 1);
    padding-left: 8px;
    color: $cl-neutral-4;
  }

  input {
    width: 100%;
    height: 100%;
  }

  label {
    margin-top: 4px;
    margin-bottom: 0;
  }
}

.c-radio-choice {
  @include flex-container(left, center, center, nowrap);
  position: relative;
  @include flex-item(100%);
  margin: 0 16px;
  padding: 8px 0;

  @include if-screen-smaller-than(sm) {
    padding: 16px 0;
    border-bottom: 1px solid $cl-border;
  }

  &:last-of-type {
    margin-bottom: 24px;
    border-bottom: 0;
  }

  p {
    padding-left: 8px;
  }
}

.c-select,
.c-input {
  position: relative;
  @include flex-item(240px, 1);
  height: 56px;
  margin: 8px;
  padding: 16px;
  border-radius: 4px;
  background-color: $cl-white;
  overflow: hidden;

  &,
  select,
  input,
  label {
    cursor: pointer;
  }

  > select,
  > input,
  .c-select__select-group {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding-top: 16px;
    padding-left: 16px;
    transition: opacity 0.2s linear;
    border: 1px solid $cl-border;
    border-radius: 4px;
    background: none;
    font-size: 16px;
  }

  label {
    display: block;
    position: absolute;
    top: 50%;
    left: 16px;
    transform: translateY(-50%);
    transition:
      top 0.2s ease-in-out,
      transform 0.2s ease-in-out,
      font-size 0.2s ease-in-out,
      background-color 0.2s linear;
    background-color: $cl-white;
    font-size: 16px;
    z-index: 1;
    pointer-events: none;
  }

  select:focus,
  input:focus,
  &:hover select,
  &:hover input,
  &.is-filled select,
  &.is-filled input {
    color: $cl-neutral-4;
    opacity: 1;

    ~ label {
      top: 4px;
      transform: translateY(0);
      background-color: $cl-white--transparent;
      color: $cl-secondary-2;
      font-size: 12px;
    }
  }

  &:hover select,
  &:hover input {
    border-color: $cl-secondary-2;
  }

  select,
  input {
    &:focus {
      outline: none;
      outline-offset: 0;
      box-shadow: 0 0 5px 0 $cl-neutral-3;

      // Fix for IE styles
      // scss-lint:disable NestingDepth
      &::-ms-value {
        background: none;
        color: $cl-neutral-6;
      }
    }
  }

  @include if-screen-smaller-than(600px) {
    // stylelint-disable-next-line declaration-no-important
    flex-basis: 100% !important;

    select + label,
    input + label {
      top: 4px;
      transform: translateY(0);
      background-color: $cl-white--transparent;
      color: $cl-secondary-2;
      font-size: 12px;
    }
  }
}

.c-select.is-locked,
.c-input.is-locked {
  @include flex-container();
  flex-basis: 100%;
  height: inherit;
  margin: 4px 8px;
  padding: 4px;

  span,
  p {
    flex-basis: auto;
    font-size: 14px;
    line-height: 1.3;
  }

  span {
    font-weight: 600;
    margin-right: 4px;

    &::after {
      content: ':';
    }
  }

  &::before,
  &::after {
    display: none;
  }
}

.c-select.has-error,
.c-input.has-error {
  color: $cl-error;

  input,
  select {
    border-color: $cl-error;
  }

  label {
    // For imutability. Error should always be red.
    // stylelint-disable-next-line declaration-no-important
    color: $cl-error !important;
  }

  &:hover {
    > label {
      color: $cl-error;
    }
  }
}

.c-select--select-group.has-error {
  border-color: $cl-error;

  &:hover,
  &:hover select {
    border-color: $cl-error;
  }
}

.c-select {
  &::before {
    position: absolute;
    top: 2px;
    right: 2px;
    width: 48px;
    height: calc(100% - 4px);
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    background: linear-gradient(to right, $cl-white--transparent 0%, $cl-white 24px);
    content: '';
    z-index: 2;
    pointer-events: none;
  }

  &::after {
    position: absolute;
    top: 50%;
    right: 16px;
    width: 21px;
    height: 12px;
    transform: translateY(-50%);
    background: url(#{$cdn-path}/design-assets/icons/chevron_20x10.svg) no-repeat right center;
    content: '';
    z-index: 3;
    pointer-events: none;
  }

  select {
    transition: color 0.2s linear;
    color: $cl-white;
    text-indent: 8px;
    z-index: 1;
    appearance: none;

    &:-moz-focusring {
      // stylelint-disable-next-line sh-waqar/declaration-use-variable
      color: transparent;
      text-shadow: 0 0 0 $cl-black;
    }
  }
}

.c-select--select-group {
  @include flex-container(center, bottom, bottom, $wrap: false);
  padding: 0 16px 6px;
  border: 1px solid $cl-border;

  select {
    position: relative;
    top: inherit;
    left: inherit;
    @include flex-item(auto);
    align-self: flex-end;
    width: inherit;
    height: 24px;
    padding: 0 8px;
    transition: opacity 0.2s linear;
    border: 0;
    border-right: 1px solid $cl-border;
    border-radius: 0;
    opacity: 0;

    &:last-of-type {
      border-right: 0;
    }

    &:focus {
      box-shadow: none;
    }
  }

  &:hover {
    border-color: $cl-secondary-2;

    select {
      border-color: $cl-border;
    }
  }

  &::before {
    display: none;
  }

  &::after {
    display: none;
  }
}

.c-input {
  input {
    // Sets Broswer overrides
    // stylelint-disable selector-no-vendor-prefix
    &::-webkit-input-placeholder,
    &:-moz-placeholder,
    &::-moz-placeholder,
    &:-ms-input-placeholder {
      color: $cl-neutral-4;
    }
    // stylelint-enable selector-no-vendor-prefix
  }
}

.c-select.c-select--small {
  flex-basis: 48px;

  @include if-screen-smaller-than(sm) {
    // stylelint-disable-next-line declaration-no-important
    flex-basis: 96px !important;
  }
}
